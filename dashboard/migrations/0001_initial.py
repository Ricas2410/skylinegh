# Generated by Django 5.2.5 on 2025-08-14 14:43

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('widget_type', models.CharField(choices=[('stats', 'Statistics'), ('chart', 'Chart'), ('recent_items', 'Recent Items'), ('quick_actions', 'Quick Actions'), ('notifications', 'Notifications')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('config_json', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('width', models.PositiveIntegerField(default=6, help_text='Width in grid columns (1-12)')),
                ('height', models.PositiveIntegerField(default=300, help_text='Height in pixels')),
                ('required_role', models.CharField(blank=True, choices=[('admin', 'Administrator'), ('content_manager', 'Content Manager'), ('sales_staff', 'Sales Staff'), ('hr_manager', 'HR Manager')], max_length=20)),
                ('required_permission', models.CharField(blank=True, max_length=50)),
            ],
            options={
                'verbose_name': 'Dashboard Widget',
                'verbose_name_plural': 'Dashboard Widgets',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('action', models.CharField(choices=[('create', 'Created'), ('update', 'Updated'), ('delete', 'Deleted'), ('view', 'Viewed'), ('login', 'Logged In'), ('logout', 'Logged Out'), ('export', 'Exported'), ('import', 'Imported')], max_length=20)),
                ('content_type', models.CharField(blank=True, help_text='Type of content affected', max_length=50)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('object_repr', models.CharField(blank=True, help_text='String representation of object', max_length=200)),
                ('description', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activity Log',
                'verbose_name_plural': 'Activity Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('success', 'Success'), ('warning', 'Warning'), ('error', 'Error'), ('inquiry', 'New Inquiry'), ('application', 'New Job Application'), ('comment', 'New Comment')], default='info', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('content_type', models.CharField(blank=True, max_length=50)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('action_url', models.URLField(blank=True, help_text='URL to navigate when clicked')),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metric_name', models.CharField(max_length=100)),
                ('metric_value', models.FloatField()),
                ('metric_date', models.DateField(default=django.utils.timezone.now)),
                ('context', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'System Metric',
                'verbose_name_plural': 'System Metrics',
                'ordering': ['-metric_date', 'metric_name'],
                'unique_together': {('metric_name', 'metric_date')},
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('admin', 'Administrator'), ('content_manager', 'Content Manager'), ('sales_staff', 'Sales Staff'), ('hr_manager', 'HR Manager')], default='content_manager', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('avatar', models.ImageField(blank=True, upload_to='profiles/')),
                ('bio', models.TextField(blank=True)),
                ('can_manage_projects', models.BooleanField(default=False)),
                ('can_manage_services', models.BooleanField(default=False)),
                ('can_manage_blog', models.BooleanField(default=False)),
                ('can_manage_careers', models.BooleanField(default=False)),
                ('can_manage_inquiries', models.BooleanField(default=False)),
                ('can_manage_users', models.BooleanField(default=False)),
                ('can_view_analytics', models.BooleanField(default=False)),
                ('email_notifications', models.BooleanField(default=True)),
                ('dashboard_theme', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark')], default='light', max_length=20)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
    ]
